---
- hosts: servers
  vars_files:
    - vars.yml
  gather_facts: false
  become: yes

  tasks:
    - name: Clone/pull project repo
      git: repo={{ project_repo }} dest={{ install_root }}/{{ project_name }} accept_hostkey=yes
      notify:
      - restart gunicorn

    - name: install python packages
      pip:
        requirements: "{{ install_root }}/{{ project_name }}/requirements.txt"
        executable: pip3
      notify:
      - restart gunicorn

    - name: copy nginx config
      template: src=files/nginx.j2 dest=/etc/nginx/sites-enabled/{{ project_name }}.conf
      notify:
      - restart nginx

#    - name: Install npm packages
#      npm:
#        path: "{{ install_root }}/{{ project_name }}"

    - name: django migrate
      django_manage:
        command: migrate
        app_path: "{{ install_root }}/{{ project_name }}"
        pythonpath: "{{ pythonpath }}"
      environment:
        DJANGO_SETTINGS_MODULE: "vet_project.settings_staging"

    - name: django compilescss
      django_manage:
        command: compilescss
        app_path: "{{ install_root }}/{{ project_name }}"
        pythonpath: "{{ pythonpath }}"
      environment:
        DJANGO_SETTINGS_MODULE: "vet_project.settings_staging"

    - name: django collectstatic
      django_manage:
        command: collectstatic
        app_path: "{{ install_root }}/{{ project_name }}"
        pythonpath: "{{ pythonpath }}"
      environment:
        DJANGO_SETTINGS_MODULE: "vet_project.settings_staging"

    - name: Copy gunicorn config
      template: src=files/gunicorn.j2 dest=/etc/systemd/system/gunicorn.service
      notify: restart gunicorn

    - name: make sure nginx server is running
      service: name=nginx state=started enabled=yes

    - name: make sure gunicorn server is running
      service: name=gunicorn state=started enabled=yes

  handlers: 
    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart gunicorn
      service: name=gunicorn state=restarted
